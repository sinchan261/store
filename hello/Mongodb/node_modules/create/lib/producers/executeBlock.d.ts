import { ProductionMode } from "../modes/types.js";
import { BlockContextWithAddons, BlockContextWithoutAddons, BlockWithAddons, BlockWithoutAddons } from "../types/blocks.js";
import { Creation } from "../types/creations.js";
export type ExecuteBlockContext<Addons extends object | undefined, Options extends object> = (Addons extends object ? BlockContextWithAddons<Addons, Options> : BlockContextWithoutAddons<Options>) & {
    mode: ProductionMode | undefined;
};
export declare function executeBlock<Addons extends object, Options extends object>(block: BlockWithAddons<Addons, Options>, blockContext: ExecuteBlockContext<object, Options>): Partial<Creation<Options>>;
export declare function executeBlock<Options extends object>(block: BlockWithoutAddons<Options>, blockContext: ExecuteBlockContext<object, Options>): Partial<Creation<Options>>;
