import * as prompts from "@clack/prompts";
import { produceBase } from "../../producers/produceBase.js";
import { promptForSchema } from "./promptForSchema.js";
export async function promptForPresetOptions({ base, existingOptions, system, }) {
    const { directory } = system;
    const options = {
        directory,
        ...existingOptions,
        ...(await produceBase(base, {
            ...system,
            options: { ...existingOptions, directory },
        })),
    };
    for (const [key, schema] of Object.entries(base.options)) {
        if (schema.isOptional() || options[key] !== undefined) {
            continue;
        }
        const prompted = await promptForSchema(key, schema);
        if (prompts.isCancel(prompted)) {
            return prompted;
        }
        options[key] = prompted;
    }
    return options;
}
//# sourceMappingURL=promptForPresetOptions.js.map