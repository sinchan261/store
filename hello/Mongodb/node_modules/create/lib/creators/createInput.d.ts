import { AnyShape, InferredObject } from "../options.js";
import { Input } from "../types/inputs.js";
export type InputDefinition<Result, ArgsSchema extends AnyShape | undefined = undefined> = ArgsSchema extends object ? InputDefinitionWithArgs<Result, ArgsSchema> : InputDefinitionWithoutArgs<Result>;
export interface InputDefinitionWithArgs<Result, ArgsSchema extends AnyShape | undefined> {
    args: ArgsSchema;
    produce: Input<Result, InferredObject<ArgsSchema>>;
}
export interface InputDefinitionWithoutArgs<Result> {
    produce: Input<Result>;
}
export declare function createInput<Result, ArgsSchema extends AnyShape | undefined = undefined>(inputDefinition: InputDefinition<Result, ArgsSchema>): Input<Result, InferredObject<ArgsSchema>>;
