import { assertNoDuplicateBlocks } from "./assertNoDuplicateBlocks.js";
import { applyZodDefaults, isDefinitionWithAddons } from "./utils.js";
export function createBase(baseDefinition) {
    function createBlock(blockDefinition) {
        // Blocks without Addons can't be called as functions.
        if (!isDefinitionWithAddons(blockDefinition)) {
            return blockDefinition;
        }
        const addonsSchema = blockDefinition.addons;
        // Blocks with Addons do need to be callable as functions...
        function block(addons) {
            return { addons, block };
        }
        // ...and also still have the Block Definition properties.
        Object.assign(block, blockDefinition);
        block.produce = (context) => {
            return blockDefinition.produce({
                ...context,
                addons: applyZodDefaults(addonsSchema, context.addons),
            });
        };
        return block;
    }
    function createPreset(presetDefinition) {
        assertNoDuplicateBlocks(presetDefinition);
        return {
            ...presetDefinition,
            base,
        };
    }
    const base = {
        ...baseDefinition,
        createBlock,
        createPreset,
    };
    return base;
}
//# sourceMappingURL=createBase.js.map