import { BlockWithAddons, BlockWithoutAddons } from "../types/blocks.js";
import { IndirectCreation } from "../types/creations.js";
import { NativeSystem } from "../types/system.js";
export type BlockRunSettings<Addons extends object | undefined, Options extends object> = Addons extends object ? BlockRunSettingsWithOptionalAddons<Addons, Options> : BlockRunSettingsWithoutAddons<Options>;
export interface BlockRunSettingsWithOptionalAddons<Addons extends object, Options extends object> extends BlockRunSettingsWithoutAddons<Options> {
    addons?: Addons;
}
export interface BlockRunSettingsWithoutAddons<Options extends object> extends Partial<NativeSystem> {
    created?: Partial<IndirectCreation<Options>>;
    directory?: string;
    options: Options;
}
export interface BlockRunSettingsWithRequiredAddons<Addons extends object, Options extends object> extends BlockRunSettingsWithoutAddons<Options> {
    addons: Addons;
}
export declare function runBlock<Addons extends object, Options extends object>(block: BlockWithAddons<Addons, Options>, settings: BlockRunSettingsWithOptionalAddons<Addons, Options>): Promise<void>;
export declare function runBlock<Options extends object>(block: BlockWithoutAddons<Options>, settings: BlockRunSettingsWithoutAddons<Options>): Promise<void>;
